---
- name: configset.yml - Parameters info
  debug:
    msg:
      - QUINTIQ_PROJECT = {{ QUINTIQ_PROJECT  }}
      - QUINTIQ_VERSION = {{ QUINTIQ_VERSION  }}
      - QUINTIQ_INSTALL_PATH = {{ QUINTIQ_INSTALL_PATH }}

- name: configset.yml - Set local variables
  set_fact:        
    install_bin: '{{ QUINTIQ_INSTALL_PATH }}\{{ QUINTIQ_PROJECT }}\quintiq{{ QUINTIQ_VERSION }}\bin'
    server_properties_default:
      - { key: 'arg.custom', value: 'StandAloneStorageState' }
      - { key: 'arg.internalstorageupgrade', value: 'true' }
      - { key: 'arg.logdays', value: 7 }
      - { key: 'arg.webserver', value: 'true' }
      - { key: 'arg.webserversoap', value: 'true' }
      - { key: 'connectiongroup.dbodbc1.connection0.protocol.securecommunication.authentication', value: 'Anonymous' }
      - { key: 'connectiongroup.dbodbc1.connection0.protocol.securecommunication.protocols', value: 'TLSv1.2' }
      - { key: 'connectiongroup.dbodbc1.connection0.protocol.securecommunication.strength', value: 'Normal' }
      - { key: 'connectiongroup.dbodbc1.connection0.protocol.streamtype', value: 'SECURESOCK_STREAM' }
      - { key: 'connectiongroup.dbodbc1.connection0.services', value: 'NOSERVICES' }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.audittrailenabled', value: 'true' }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.databaseenabled', value: 'false' }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.datasetstoreenabled', value: 'true' }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.datasetstoreislocal', value: 'false' }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.dbformat', value: 'Legacy' }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.driver', value: 'ODBC' }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.maxcolumnname', value: 128 }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.maxtablename', value: 128 }
      - { key: 'domainmodel.mdsstoragedefinitionmanager.parameters', value: '"/datasource={{ QUINTIQ_PROJECT }} /user=sa /owner=dbo"' }
      - { key: 'domainmodel.datasetrecovery.recovery.password', value: "{{ ('{{ QUINTIQ_PROJECT }}:Tiger2019' | b64encode).decode('utf-8') }}" }
      - { key: 'serviceportgroup.serviceportgroup1.serviceport0.minimumsecurity', value: 'Anonymous' }
      - { key: 'serviceportgroup.serviceportgroup1.serviceport0.pem', value: 'QuintiqDHP.pem' }
      - { key: 'serviceportgroup.serviceportgroup1.serviceport0.protocols', value: 'TLSv1.2' }
      - { key: 'serviceportgroup.serviceportgroup1.serviceport0.tcpipversion', value: 'IPv4' } 

- name: configset.yml - Local variables
  debug:
    msg:
        - "install_bin: {{ install_bin }}"  

- name: configset.yml - New configset role [Common,qod]
  win_command: qk new server configset [Common,qod]
  args:
    chdir: '{{ install_bin }}'
  ignore_errors: true

- name: configset.yml - New configset local [Common,qod,{{ ansible_env.COMPUTERNAME }}]
  win_command: qk new server configset [Common,qod,{{ ansible_env.COMPUTERNAME }}] --local
  args:
    chdir: '{{ install_bin }}'
  ignore_errors: true

- name: configset.yml - Set configset [Common,qod,{{ ansible_env.COMPUTERNAME }}]
  win_command: qk set server configset [Common,qod,{{ ansible_env.COMPUTERNAME }}]
  args:
    chdir: '{{ install_bin }}'
  ignore_errors: true

- name: configset.yml - Set qod role properties default values
  win_command: qk set server {{ item.key }}={{ item.value }} --configset=[Common,qod]
  args:
    chdir: '{{ install_bin }}'
  loop: "{{ server_properties_default }}"
  when: >
    item.key is defined and 
    item.value is defined