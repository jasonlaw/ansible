---
- name: core.yml - Parameters info
  debug:
    msg:
      - QUINTIQ_PROJECT = {{ QUINTIQ_PROJECT }}
      - QUINTIQ_VERSION = {{ QUINTIQ_VERSION }}
      - QUINTIQ_INSTALL_PATH = {{ QUINTIQ_INSTALL_PATH }}
      - QUINTIQ_WORKSPACE = {{ QUINTIQ_WORKSPACE | default('undefined') }}

- name: core.yml - Set local variables
  set_fact:        
    install_release_name: '{{ QUINTIQ_VERSION }}-all'
    install_prj: '{{ QUINTIQ_INSTALL_PATH }}\{{ QUINTIQ_PROJECT }}'
    install_dest: '{{ QUINTIQ_INSTALL_PATH }}\{{ QUINTIQ_PROJECT }}\quintiq{{ QUINTIQ_VERSION }}'    
    install_bin: '{{ QUINTIQ_INSTALL_PATH }}\{{ QUINTIQ_PROJECT }}\quintiq{{ QUINTIQ_VERSION }}\bin'
            
- name: core.yml - Check if {{ install_dest }} directory exists
  win_stat:
    path: '{{ install_dest }}'
  register: directory_check

- name: core.yml - Copy release build
  include_tasks: copy_release.yml
  vars:
    copy_release_autoextract: true
  when: not directory_check.stat.exists

- name: core.yml - Move release build {{ copy_release_path }}\{{ copy_release_name }} to destination {{ install_dest }}
  win_shell: |
    Move-Item -Path '{{ copy_release_path }}\{{ copy_release_name }}' -Destination "{{ install_dest }}" -Force
  when: not directory_check.stat.exists

- name: core.yml - Cleanup temp release build {{ copy_release_path }}\{{ copy_release_name }}
  win_file: 
    path: '{{ copy_release_path }}\{{ copy_release_name }}'
    state: absent
  ignore_errors: true
  when: copy_release_path is defined and copy_release_name is defined

- name: core.yml - Copy etc folder to project path
  win_copy:
    src: '{{ install_dest }}\etc'
    dest: '{{ install_prj }}'
    remote_src: true
    force: false
  when: not directory_check.stat.exists

- name: core.yml - Check if the workspace file exists
  win_stat:
    path: '{{ install_dest }}\default.qworkspace'
  register: workspace_file_info
  ignore_errors: true

- name: core.yml - Create default workspace
  win_command: qk new workspace default
  args:
    chdir: '{{ install_bin }}'
  register: quintiq_workspace
  when: >
    workspace_file_info.stat.exists is not defined or
    not workspace_file_info.stat.exists

- name: core.yml - Set root path
  win_command: qk set workspace root="{{ install_prj }}"
  args:
    chdir: '{{ install_bin }}'
  when: >
    workspace_file_info.stat.exists is not defined or
    not workspace_file_info.stat.exists

- name: core.yml - Set bin path
  win_command: qk set workspace bin="{{ install_bin }}"
  args:
    chdir: '{{ install_bin }}'
  when: >
    workspace_file_info.stat.exists is not defined or
    not workspace_file_info.stat.exists

- name: core.yml - Update Quintiq state
  include_tasks: write_state.yml