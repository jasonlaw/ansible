---
- name: Parameters info
  debug:
    msg:
      - QUINTIQ_VERSION = {{ QUINTIQ_VERSION  }}
      - QUINTIQ_INSTALL_PATH = {{ QUINTIQ_INSTALL_PATH }}
      - QUINTIQ_INSTALL_SRC_PATH = {{ QUINTIQ_INSTALL_SRC_PATH }}
      - QUINTIQ_INSTALL_SRC_NAME = {{ QUINTIQ_INSTALL_SRC_NAME }}
      - QUINTIQ_WORSKPACE = {{ QUINTIQ_WORSKPACE | default('undefined') }}
      - QUINTIQ_LICENSE = {{ QUINTIQ_LICENSE | default('undefined') }}

- name: Set local variables
  set_fact:
    install_src: '{{ QUINTIQ_INSTALL_SRC_PATH }}\{{ QUINTIQ_INSTALL_SRC_NAME }}'
    install_dest: '{{ QUINTIQ_INSTALL_PATH }}\quintiq{{ QUINTIQ_VERSION }}'    
    install_bin: '{{ install_dest }}\bin'
    temp_path: 'C:\tmp'
    
- name: Local variables
  debug:
    msg:
        - "install_src: {{ install_src }}"
        - "install_dest: {{ install_dest }}"
        - "install_bin: {{ install_bin }}"
        - "temp_path: {{ temp_path }}"
        
- name: Check if {{ install_dest }} directory exists
  win_stat:
    path: '{{ install_dest }}'
  register: directory_check

- name: '{{ install_dest }} directory info'
  debug:
    var: directory_check

- name: Unzip source file to {{ temp_path }}\{{ QUINTIQ_INSTALL_SRC_NAME }}
  win_unzip:
    src: '{{ install_src }}.zip'
    dest: '{{ temp_path }}\{{ QUINTIQ_INSTALL_SRC_NAME }}'
    creates: '{{ temp_path }}\{{ QUINTIQ_INSTALL_SRC_NAME }}'
    # rm: true
  when: not directory_check.stat.exists

- name: Copy the extracted source to destination {{ install_dest }}
  win_copy:
    src: '{{ temp_path }}\{{ QUINTIQ_INSTALL_SRC_NAME }}\{{ QUINTIQ_INSTALL_SRC_NAME }}'
    dest: '{{ install_dest }}'
    remote_src: true
  when: not directory_check.stat.exists
# - name: Move extracted source to destination {{ install_dest }}
#   win_shell: |
#     Copy-Item -Path '{{ temp_path }}\{{ QUINTIQ_INSTALL_SRC_NAME }}\{{ QUINTIQ_INSTALL_SRC_NAME }}' -Destination "{{ install_dest }}" -Force
#   when: not directory_check.stat.exists

- name: Remove extracted temp file {{ temp_path }}\{{ QUINTIQ_INSTALL_SRC_NAME }}
  win_file: 
    path: '{{ temp_path }}\{{ QUINTIQ_INSTALL_SRC_NAME }}'
    state: absent
  ignore_errors: true

- name: Check if the workspace file exists
  win_stat:
    path: '{{ install_dest }}\\default.qworkspace'
  register: workspace_file_info
  ignore_errors: true

- name: Create default workspace
  win_command: qk new workspace default
  args:
    chdir: '{{ install_bin }}'
  register: quintiq_workspace
  when: >
    workspace_file_info.stat.exists is not defined or
    not workspace_file_info.stat.exists

- name: Set models path
  win_command: qk set workspace models="{{ QUINTIQ_WORKSPACE.MODELS_PATH }}"
  args:
    chdir: '{{ install_bin }}'
  when: >
    QUINTIQ_WORKSPACE is defined and
    QUINTIQ_WORKSPACE.MODELS_PATH is defined

- name: Set var path
  win_command: qk set workspace var="{{ QUINTIQ_WORKSPACE.VAR_PATH }}"
  args:
    chdir: '{{ install_bin }}'
  when: >
    QUINTIQ_WORKSPACE is defined and
    QUINTIQ_WORKSPACE.VAR_PATH is defined

- name: Create models path
  win_file:
    path: '{{ QUINTIQ_WORKSPACE.MODELS_PATH }}'
    state: directory
  when: >
    QUINTIQ_WORKSPACE is defined and
    QUINTIQ_WORKSPACE.MODELS_PATH is defined and
    QUINTIQ_WORKSPACE.MODELS_PATH_CREATE|bool

- name: Create var path
  win_file:
    path: '{{ QUINTIQ_WORKSPACE.VAR_PATH }}'
    state: directory
  when: >
    QUINTIQ_WORKSPACE is defined and
    QUINTIQ_WORKSPACE.VAR_PATH is defined and
    QUINTIQ_WORKSPACE.VAR_PATH_CREATE|bool