---
- name: model.yml - Parameters info
  debug:
    msg:
      - QUINTIQ_PROJECT = {{ QUINTIQ_PROJECT  }}
      - QUINTIQ_VERSION = {{ QUINTIQ_VERSION  }}
      - QUINTIQ_INSTALL_PATH = {{ QUINTIQ_INSTALL_PATH }}
      - QUINTIQ_MODEL = {{ QUINTIQ_MODEL }}

- name: model.yml - Set local variables
  set_fact:        
    install_bin: '{{ QUINTIQ_INSTALL_PATH }}\{{ QUINTIQ_PROJECT }}\quintiq{{ QUINTIQ_VERSION }}\bin'

- name: model.yml - Local variables
  debug:
    msg:
        - "install_bin: {{ install_bin }}"  

- name: model.yml - Copy model source
  include_tasks: copy_model.yml

- name: model.yml - Read stored model checksum
  win_shell: Get-Content '{{ QUINTIQ_INSTALL_PATH }}\{{ QUINTIQ_PROJECT }}\quintiq_model.yml'
  register: model_checksum
  ignore_errors: true
  when: copy_model_rc.stat.exists

- name: model.yml - Check if any changes
  set_fact:
    model_changed: "{{ copy_model_rc.stat.exists and (copy_model_rc.stat.checksum != (model_checksum.stdout | default(''))) }}"

- name: Install/Upgrade model from '{{ copy_model_rc.stat.path }}'
  win_command: qk new server model {{ copy_model_rc.stat.path }}
  args:
    chdir: '{{ install_bin }}'
  register: qk_model
  when: model_changed

- name: Set active model
  win_command: qk set server model '{{ QUINTIQ_MODEL.NAME }}'
  args:
    chdir: '{{ install_bin }}'
  register: qk_model_active
  when: qk_model.changed

- name: New configset [Common,qod,{{ ansible_env.COMPUTERNAME }}]
  win_command: qk new server configset [Common,qod,{{ ansible_env.COMPUTERNAME }}] --local
  args:
    chdir: '{{ install_bin }}'
  register: qk_configset_new
  when: qk_model.changed
  ignore_errors: true
  changed_when: qk_configset_new.rc == 0 

- name: Set configset [Common,qod,{{ ansible_env.COMPUTERNAME }}]
  win_command: qk set server configset [Common,qod,{{ ansible_env.COMPUTERNAME }}]
  args:
    chdir: '{{ install_bin }}'
  register: qk_configset_set
  when: qk_configset_new.changed

