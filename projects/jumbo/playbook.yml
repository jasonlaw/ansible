---
- hosts: QAE

  vars:
  
    - quintiq_version: "6420"
    - sitekey: "162002"

    - zip_src_path: \\sdcvwdel40\QuintiqReleases\{{ quintiq_version }}-all.zip
    - zip_path: "c:\\tmp\\{{ quintiq_version }}-all.zip"

    - license_src_path: \\sdcvwdel40\QuintiqLicenses\{{ ansible_env.COMPUTERNAME }}\{{ sitekey }}\license.txt
    - license_path: "c:\\tmp\\license_{{ sitekey }}.txt"

    - models_path: "D:\\jumbo\\models"
    - var_path: "D:\\jumbo\\var"

  roles:
    
    - role: install_quintiq_core
      vars:
        QUINTIQ_INSTALL_PATH: "D:\\quintiq{{ quintiq_version }}"
        QUINTIQ_INSTALL_SRC_NAME: "{{ quintiq_version }}-all"      
        QUINTIQ_MODELS_PATH: "{{ models_path }}"
        QUINTIQ_VAR_PATH: "{{ var_path }}"

    - role: install_quintiq_license
      vars:
        # QUINTIQ_INSTALL_PATH: "D:\\quintiq{{ quintiq_version }}" #how to avoid redundant?
        QUINTIQ_SITEKEY: "{{ sitekey }}"
        QUINTIQ_LICENSE_PATH: "{{ license_path }}"
      
  pre_tasks:
    
    - name: create "{{ models_path }}" if not exists
      win_file: 
        path: "{{ models_path }}"
        state: directory

    - name: create "{{ var_path }}" if not exists
      win_file: 
        path: "{{ var_path }}"
        state: directory
      
    - name: Copy "{{ zip_src_path }}" into tmp folder
      win_copy: 
        src: "{{ zip_src_path }}"
        dest: "{{ zip_path }}"
        remote_src: true
      become: true
      become_method: runas
      become_user: dsone\jlw1      
      vars:
        ansible_become_password: "{{ vault_ansible_user_password }}"

    - name: Copy "{{ license_path }}" into tmp folder
      win_copy: 
        src: "{{ license_src_path }}"
        dest: "{{ license_path }}"
        remote_src: true
      become: true
      become_method: runas
      become_user: dsone\jlw1      
      vars:
        ansible_become_password: "{{ vault_ansible_user_password }}"

  post_tasks:
    
    - name: Cleanup temp zip file
      win_file:
        path: "{{ zip_path }}"
        state: absent
      ignore_errors: true

    - name: Cleanup temp license file
      win_file:
        path: "{{ license_path }}"
        state: absent
      ignore_errors: true